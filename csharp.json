{
    "TCP Subscriber Snippet": {
        "prefix": "Subscriber",
        "body": [
            "using UnityEngine;",
			"using RosMessageTypes.Std;",
            "using RosMessageTypes.Sensor;",
			"using RosMessageTypes.Geometry;",
			"using RosMessageTypes.Nav;",
            "using RosMessageTypes.Visualization;",
            "using Unity.Robotics.ROSTCPConnector;",
            "using System;",
            "using System.Collections.Generic;",
            "",
            "public class ${1:ClassName} : MonoBehaviour",
            "{",
            "    // ROSConnector를 통한 ROS 연결 인스턴스",
            "    private ROSConnection ros;",
            "    private ${2:EmptyMsg} msg;",
            "",
            "    // 송수신할 ROS 토픽 이름",
            "    public string topicName;",
            "",
            "    public ${2:EmptyMsg} GetMsg()",
            "    {",
            "        return msg;",
            "    }",
            "",
            "    void Start()",
            "    {",
            "        // ROS 연결 설정",
            "        ros = ROSConnection.GetOrCreateInstance();",
            "        ros.Subscribe<${2:EmptyMsg}>(topicName, ReceiveMessage);",
            "",
            "        // 수신할 메시지 인스턴스 생성",
            "        msg = new ${2:EmptyMsg}();",
            "    }",
            "",
            "    void Update()",
            "    {",
            "    }",
            "",
            "    // ROS로부터 메시지 수신",
            "    private void ReceiveMessage(${2:EmptyMsg} message)",
            "    {",
            "        // 수신한 메시지를 저장",
            "        msg = message;",
            "    }",
            "}"
        ],
        "description": "C# Script for subscribing to a ROS topic"
    },
    "TCP Publisher Snippet": {
        "prefix": "Publisher",
        "body": [
            "using UnityEngine;",
            "using RosMessageTypes.Std;",
            "using RosMessageTypes.Sensor;",
            "using RosMessageTypes.Geometry;",
            "using RosMessageTypes.Nav;",
            "using RosMessageTypes.Visualization;",
            "using Unity.Robotics.ROSTCPConnector;",
            "using System;",
            "using System.Collections.Generic;",
            "",
            "public class ${1:ClassName} : MonoBehaviour",
            "{",
            "    private ROSConnection ros;",
            "    private ${2:EmptyMsg} msg;",
            "    ",
            "    public string topicName;",
            "    public float publishRate = 1.0f;",
            "    private float timeElapsed;",
            "    void Start()",
            "    {",
            "        ros = ROSConnection.GetOrCreateInstance();",
            "        ros.RegisterPublisher<${2:EmptyMsg}>(topicName);",
            "",
            "        msg = new ${2:EmptyMsg}();",
            "    }",
            "",
            "    void Update()",
            "    {",
            "        PublishMessage();",
            "    }",
            "",
            "    private void PublishMessage(){",
            "        timeElapsed += Time.deltaTime;",
            "        if (timeElapsed > publishRate)",
            "        {",
            "            timeElapsed = 0.0f;",
            "            ros.Publish(topicName, msg);",
            "        }",
            "    }",
            "}"
        ],
        "description": "C# Script for publishing to a ROS topic"
    },
    "Unity Main Snippet": {
        "prefix": "MonoBehaviour",
        "body": [
            "using UnityEngine;",
            "using UnityEngine.XR;",
            "",
            "public class ${1:ClassName} : MonoBehaviour",
            "{",
            "    void Start()",
            "    {",
            "    }",
            "",
            "    void Update()",
            "    {",
            "    }",
            "",
            "    void LateUpdate()",
            "    {",
            "    }",
            "",
            "    void FixedUpdate()",
            "    {",
            "    }",
            "}"
          ],
        "description": "C# Script for Unity main"
    }
}
